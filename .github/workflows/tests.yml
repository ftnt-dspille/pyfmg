name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11", "3.12" ]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install -e .
        continue-on-error: true  # mypy can be strict, don't fail CI for now

      - name: Run unit tests
        run: |
          pytest tests/ -m "unit or not integration" --cov=pyFMG --cov-report=xml

      - name: Run integration tests
        run: |
          pytest tests/ -m "integration" --cov=pyFMG --cov-append --cov-report=xml
        continue-on-error: true  # Integration tests might fail without live environment


  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit pip-audit
          pip install -e .

      - name: Run security check with bandit
        run: |
          bandit -r pyFMG/ -f json -o bandit-report.json
        continue-on-error: true

      - name: Check for known security vulnerabilities with safety
        run: |
          pip-audit --requirement <(echo "requests") --format=json --output=security-report.json
        continue-on-error: true

  compatibility:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        python-version: [ "3.9", "3.11" ]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install -e .

      - name: Run basic tests
        run: |
          pytest tests/ -v